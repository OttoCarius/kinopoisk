{"version":3,"file":"static/js/589.87723a2e.chunk.js","mappings":"2OAEaA,EAAOC,EAAAA,GAAAA,GAAH,sBAEJC,EAAmBD,EAAAA,GAAAA,GAAH,qMAWhBE,EAAYF,EAAAA,GAAAA,IAAH,uNAUTG,EAAkBH,EAAAA,GAAAA,IAAH,kEASfI,GAJcJ,EAAAA,GAAAA,IAAH,wCAIEA,EAAAA,GAAAA,KAAH,+CAIVK,EAAcL,EAAAA,GAAAA,IAAH,qE,SCHxB,EA1BgB,SAAC,GAAc,IAAZM,EAAW,EAAXA,KACTC,EAAgCD,EAAhCC,OAAQC,EAAwBF,EAAxBE,WAAYC,EAAYH,EAAZG,QAE5B,OACE,UAACR,EAAD,YACE,UAACC,EAAD,YACE,SAACC,EAAD,WASE,SAACC,EAAD,UAAaG,OAEf,0BAAOC,QAET,SAACH,EAAD,WACE,uBAAII,QAIX,E,UCFD,EAxBqB,WACnB,IAAMC,GAASC,EAAAA,EAAAA,MACf,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA2BN,EAAOO,IAAIC,MAAK,SAAAZ,GACzC,GAAoB,IAAhBA,EAAKa,OACP,OAAOC,EAAAA,OAAAA,KAAY,kCAErBN,EAAWR,EACZ,GAEF,GAAE,CAACI,EAAOW,UAGT,+BACE,SAACtB,EAAD,UACGc,EAAQM,OAAS,GAChBN,EAAQS,KAAI,SAAAC,GAAE,OAAI,SAAC,EAAD,CAAqBjB,KAAMiB,GAAbA,EAAGN,GAArB,OAIvB,C,4MC3BKO,EAAU,mCAKT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,IAAAA,IAAA,iCACKF,EADL,2BADlB,cACCG,EADD,yBAIEA,EAASrB,KAAKsB,SAJhB,kEASA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAqCC,GAArC,uFACkBJ,IAAAA,IAAA,gCACIF,EADJ,iCACoCM,EADpC,gCADlB,cACCH,EADD,yBAIEA,EAASrB,KAAKsB,SAJhB,kEAQA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA6BC,GAA7B,uFACkBN,IAAAA,IAAA,iBACXM,EADW,6DADlB,cACCL,EADD,yBAIEA,EAASrB,MAJX,kEAQA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACkBN,IAAAA,IAAA,iBACXM,EADW,4BACiBR,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASrB,KAAKsB,SALhB,kEAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,uFACkBN,IAAAA,IAAA,iBACXM,EADW,4BACiBR,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASrB,KAAK6B,MALhB,kEApCPT,IAAAA,SAAAA,QAAyB,+B","sources":["components/MovieReviews/Reviews/Reviews.styled.js","components/MovieReviews/Reviews/Reviews.js","components/MovieReviews/MovieReviews.js","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul``;\n\nexport const ContainerReviews = styled.li`\n  margin-top: 20px;\n  width: 100%;\n  border-radius: 10px;\n  overflow: hidden;\n  line-height: 1.5;\n  @media screen and (max-width: 480px) {\n    max-width: 300px;\n  }\n`;\n\nexport const PanelInfo = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 5px;\n  border-top-left-radius: 10px;\n  border-top-right-radius: 10px;\n  background-color: #ebeaea;\n`;\n\nexport const ConteinerAvatar = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ImageAvatar = styled.img`\n  width: 30px;\n`;\n\nexport const AvatarName = styled.span`\n  margin-left: 10px;\n`;\n\nexport const ReviewsData = styled.div`\n  background-color: #fff;\n  padding: 20px;\n`;\n","import {\n  ConteinerAvatar,\n  AvatarName,\n  //   ImageAvatar,\n  ReviewsData,\n  PanelInfo,\n  ContainerReviews,\n} from './Reviews.styled';\n\nconst Reviews = ({ data }) => {\n  const { author, created_at, content } = data;\n\n  return (\n    <ContainerReviews>\n      <PanelInfo>\n        <ConteinerAvatar>\n          {/* <ImageAvatar\n            src={\n              data.author_details?.avatar_path?.includes('https:')\n                ? author_details.avatar_path.slice(1)\n                : `../../../../assets/Images/none.jpg${avatarPath}`\n            }\n            alt=\"\"\n          /> */}\n          <AvatarName>{author}</AvatarName>\n        </ConteinerAvatar>\n        <span>{created_at}</span>\n      </PanelInfo>\n      <ReviewsData>\n        <p>{content}</p>\n      </ReviewsData>\n    </ContainerReviews>\n  );\n};\n\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as FetchAPI from '../../services/Api';\nimport Reviews from './Reviews/Reviews';\nimport { List } from './Reviews/Reviews.styled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst MovieReviews = () => {\n  const params = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    FetchAPI.fetchMovieReviews(params.id).then(data => {\n      if (data.length === 0) {\n        return Notify.info('Sorry... reviews list is empty');\n      }\n      setReviews(data);\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [params.filmId]);\n\n  return (\n    <>\n      <List>\n        {reviews.length > 0 &&\n          reviews.map(el => <Reviews key={el.id} data={el} />)}\n      </List>\n    </>\n  );\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\n\nconst API_KEY = '8b9b90eab4f34348a4bd4775afa7ecfd';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// Фетч трендов\nexport async function fetchPopularFilms() {\n  const response = await axios.get(\n    `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n\n//  Фетч по поиску по имени\n\nexport async function fetchSearchFilmByName(filmName) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${filmName}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\n// Фетч фильма по id\nexport async function fetchFilmInfo(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}?api_key=8b9b90eab4f34348a4bd4775afa7ecfd&language=en-US`\n  );\n  return response.data;\n}\n\n// Фетч отзывов на фильм\nexport async function fetchMovieReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieCast(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.cast;\n}\n"],"names":["List","styled","ContainerReviews","PanelInfo","ConteinerAvatar","AvatarName","ReviewsData","data","author","created_at","content","params","useParams","useState","reviews","setReviews","useEffect","FetchAPI","id","then","length","Notify","filmId","map","el","API_KEY","fetchPopularFilms","axios","response","results","fetchSearchFilmByName","filmName","fetchFilmInfo","movie_id","fetchMovieReviews","fetchMovieCast","cast"],"sourceRoot":""}