{"version":3,"file":"static/js/703.76c1b0fa.chunk.js","mappings":"8KAAaA,EAAa,CACxB,CAAEC,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,MAAOC,KAAM,UACnB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,WAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,MAAOC,KAAM,SACnB,CAAED,GAAI,KAAMC,KAAM,WAClB,CAAED,GAAI,MAAOC,KAAM,WACnB,CAAED,GAAI,IAAKC,KAAM,mBACjB,CAAED,GAAI,MAAOC,KAAM,YACnB,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,MAAOC,KAAM,OACnB,CAAED,GAAI,GAAIC,KAAM,Y,mBChBLC,EAAiB,SAAAC,GAC5B,IAAMH,EAAKI,OAAOC,OAAOF,GACnBG,EAAa,GAOnB,OALAP,EAAWQ,SAAQ,SAAAC,GACbR,EAAG,GAAGS,SAASD,EAAGR,KACpBM,EAAWI,KAAKF,EAAGP,KAEtB,KACM,SAACU,EAAD,UAASL,EAAWM,MAAM,EAAG,GAAGC,KAAK,MAAQ,WACrD,EAEKF,EAASG,EAAAA,GAAAA,KAAH,4M,UCZCC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,kEAKRG,EAAOH,EAAAA,GAAAA,GAAH,omBA0BJI,EAAQJ,EAAAA,GAAAA,EAAH,oiBA4BLK,EAAcL,EAAAA,GAAAA,IAAH,iKAQXM,EAAQN,EAAAA,GAAAA,IAAH,+DC5ClB,EAtBiB,SAAC,GAAkB,IAAhBO,EAAe,EAAfA,SACVC,EAAkCD,EAAlCC,YAAaC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UAC5B,OACE,+BACE,UAACP,EAAD,YACE,SAACG,EAAD,CACEK,IACEH,EAAW,yCAC2BA,GAD3B,+EAIbI,IAAI,MAEN,UAACP,EAAD,YACE,SAACD,EAAD,UAAQK,KACR,SAACrB,EAAD,CAAgBC,SAAUqB,WAKnC,ECtBYG,EAAOb,EAAAA,GAAAA,GAAH,oT,SCsBjB,EAlBiB,SAAC,GAAc,IAAZc,EAAW,EAAXA,KACZC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACH,EAAD,UACGC,EAAKG,KAAI,SAAAvB,GAAE,OACV,SAACO,EAAD,CACEiB,GAAE,kBAAaxB,EAAGR,IAClBiC,MAAO,CAAEC,KAAML,GAFjB,UAKE,SAAC,EAAD,CAAUR,SAAUb,KAFfA,EAAGR,GAJA,KAWjB,C,sJCpBYmC,EAAYrB,EAAAA,GAAAA,IAAH,sBAETsB,EAActB,EAAAA,GAAAA,MAAH,o4BA8CXuB,EAAevB,EAAAA,GAAAA,IAAH,2PChDZwB,EAAaxB,EAAAA,GAAAA,IAAH,iJAwBVyB,EAAczB,EAAAA,GAAAA,EAAH,gnBAET,SAAA0B,GAAC,OAAIA,EAAEC,MAAMC,UAAUC,GAAtB,IACC,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,QAAxB,IACE,SAAAL,GAAC,OAAIA,EAAEC,MAAMK,cAAcC,MAA1B,IACJ,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,MAAMC,SAAlB,IAaD,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,UAAUQ,CAAtB,IAID,SAAAV,GAAC,OAAIA,EAAEC,MAAMC,UAAUS,CAAtB,IAGD,SAAAX,GAAC,OAAIA,EAAEC,MAAMC,UAAUU,CAAtB,I,SC9CZC,EAAU,kBACd,SAACf,EAAD,WAEE,SAACC,EAAD,+CAHY,EAOhBc,EAAQC,aAAe,CACrBC,SAAU,IAOZ,I,EAAA,ICeA,EA7Ba,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,kBAAmBC,EAAY,EAAZA,MAC/C,OACE,UAACvB,EAAD,YACE,iBAAMwB,SAAUH,EAAhB,UACE,SAACnB,EAAD,UACGqB,GACC,SAACtB,EAAD,CACEwB,YAAY,iBACZC,KAAK,OACLC,SAAUL,KAGZ,SAACrB,EAAD,CACEyB,KAAK,OACLD,YAAY,iBACZE,SAAUL,SASlB,+BAAOC,EAAMK,OAAS,IAAK,SAAC,EAAD,SAGhC,E,oBCkCKC,EAAgBlD,EAAAA,GAAAA,IAAH,6CAInB,EA9DmB,WAAO,IAAD,EACvB,GAAwCmD,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BC,EAAAA,EAAAA,UAAQ,UAACF,EAAaG,IAAI,gBAAlB,QAA8B,IAAhE,eAAOX,EAAP,KAAcY,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACJjB,IACFS,EAAgB,SAAD,OAAUT,IACzBkB,EAAAA,GAA+BlB,GAC5BmB,MAAK,SAAAjD,GACJkD,EAAAA,QAAAA,OAAe,CACbC,SAAU,YAEZP,EAAS5C,GACW,IAAhBA,EAAKmC,QACPiB,EAAAA,OAAAA,KAAY,gBAAiB,CAC3BC,UAAW,KAGhB,IACAC,SAAQ,WACPJ,EAAAA,QAAAA,QACD,IAEN,GAAE,CAACpB,EAAOS,IAmBX,OACE,iCACE,SAACH,EAAD,WACE,SAAC,EAAD,CACER,aAjBa,SAAA2B,GACnBA,EAAEC,iBACFD,EAAEE,OAAOC,QAEW,KAAhBb,EAMJH,EAASG,GALPO,EAAAA,OAAAA,QAAe,0BAMlB,EAOOvB,kBAtBkB,SAAA0B,GACxBT,EAAeS,EAAEE,OAAOE,MAAMC,cAAcC,OAC7C,EAqBO/B,MAAOA,OAGX,SAACgC,EAAA,EAAD,CAAU9D,KAAM2C,MAGrB,C,4MC/DKoB,EAAU,mCAKT,SAAeC,IAAtB,+B,aAAO,O,oBAAA,oGACkBC,IAAAA,IAAA,iCACKF,EADL,2BADlB,cACCG,EADD,yBAIEA,EAASlE,KAAKmE,SAJhB,kEASA,SAAeC,EAAtB,kC,aAAO,O,oBAAA,WAAqCC,GAArC,uFACkBJ,IAAAA,IAAA,gCACIF,EADJ,iCACoCM,EADpC,gCADlB,cACCH,EADD,yBAIEA,EAASlE,KAAKmE,SAJhB,kEAQA,SAAeG,EAAtB,kC,aAAO,O,oBAAA,WAA6BC,GAA7B,uFACkBN,IAAAA,IAAA,iBACXM,EADW,6DADlB,cACCL,EADD,yBAIEA,EAASlE,MAJX,kEAQA,SAAewE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,uFACkBN,IAAAA,IAAA,iBACXM,EADW,4BACiBR,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASlE,KAAKmE,SALhB,kEAQA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAA8BF,GAA9B,uFACkBN,IAAAA,IAAA,iBACXM,EADW,4BACiBR,EADjB,2BADlB,cACCG,EADD,yBAKEA,EAASlE,KAAK0E,MALhB,kEApCPT,IAAAA,SAAAA,QAAyB,+B","sources":["components/Genres/genresInfo.js","components/Genres/GenerateGenres.js","components/CardFilm/CardFilm.styled.js","components/CardFilm/CardFilm.js","components/FilmList/FilmList.styled.js","components/FilmList/FilmList.js","pages/MoviesPage/Form/Form.styled.js","components/Message/Message.styled.js","components/Message/Message.jsx","pages/MoviesPage/Form/Form.js","pages/MoviesPage/MoviesPage.js","services/Api.js"],"sourcesContent":["export const genresInfo = [\n  { id: 28, name: 'Action' },\n  { id: 12, name: 'Adventure' },\n  { id: 16, name: 'Animation' },\n  { id: 35, name: 'Comedy' },\n  { id: 80, name: 'Crime' },\n  { id: 99, name: 'Documentary' },\n  { id: 18, name: 'Drama' },\n  { id: 10751, name: 'Family' },\n  { id: 14, name: 'Fantasy' },\n  { id: 36, name: 'History' },\n  { id: 27, name: 'Horror' },\n  { id: 10402, name: 'Music' },\n  { id: 9648, name: 'Mystery' },\n  { id: 10749, name: 'Romance' },\n  { id: 878, name: 'Science Fiction' },\n  { id: 10770, name: 'TV Movie' },\n  { id: 53, name: 'Thriller' },\n  { id: 10752, name: 'War' },\n  { id: 37, name: 'Western' },\n];\n","import { genresInfo } from './genresInfo';\nimport styled from 'styled-components';\n\nexport const GenerateGenres = genresId => {\n  const id = Object.values(genresId);\n  const listGenres = [];\n\n  genresInfo.forEach(el => {\n    if (id[0].includes(el.id)) {\n      listGenres.push(el.name);\n    }\n  });\n  return <Genres>{listGenres.slice(0, 2).join(', ') + ', Other'}</Genres>;\n};\n\nconst Genres = styled.span`\n  padding: 6px 0;\n  color: #ff6b01;\n\n  @media screen and (max-width: 770px) {\n    font-size: 13px;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 18px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n  color: #fff;\n`;\n\nexport const Item = styled.li`\n  overflow: hidden;\n  border-radius: 16px;\n  box-shadow: 0px 0px 5px 0px rgba(255, 255, 255, 0.75);\n  background-color: #00151a;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  padding: 20px 10px;\n  &:hover,\n  :focus {\n    color: #33ffff;\n    box-shadow: 0 0 15px #33ffff, 0 0 15px #33ffff, 0 0 15px #33ffff,\n      0 0 25px #33ffff, 0 0 35px #33ffff;\n    opacity: 0.8;\n    transition: 0.5s;\n    transform: scale(1.02);\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 400px;\n  }\n\n  @media screen and (max-width: 420px) {\n    width: 280px;\n  }\n`;\n\nexport const Title = styled.p`\n  color: white;\n  font-family: Georgia, serif;\n  font-size: 16px;\n  letter-spacing: 0.5px;\n  word-spacing: 1.2px;\n  font-weight: 500;\n  text-decoration: none solid rgb(68, 68, 68);\n  font-style: italic;\n  font-variant: normal;\n  text-transform: capitalize;\n  padding: 10px 0;\n\n  @media screen and (max-width: 768px) {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 480px) {\n    font-size: 18px;\n  }\n\n  &:hover,\n  &:focus {\n    color: #003333;\n    opacity: 0.8;\n    transition: 0.3s;\n  }\n`;\nexport const MetaWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 90px;\n`;\nexport const Image = styled.img`\n  display: block;\n  max-width: 100%;\n`;\n","import { GenerateGenres } from '../Genres/GenerateGenres';\nimport { Item, Title, MetaWrapper, Image } from './CardFilm.styled';\nimport PropTypes from 'prop-types';\n\nconst CardFilm = ({ itemData }) => {\n  const { poster_path, title, genre_ids } = itemData;\n  return (\n    <>\n      <Item>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\n              : `https://upload.wikimedia.org/wikipedia/commons/f/fc/No_picture_available.png`\n          }\n          alt=\"\"\n        />\n        <MetaWrapper>\n          <Title>{title}</Title>\n          <GenerateGenres genresId={genre_ids} />\n        </MetaWrapper>\n      </Item>\n    </>\n  );\n};\n\nexport default CardFilm;\n\nCardFilm.propTypes = {\n  itemData: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1em;\n  list-style: none;\n  @media screen and (max-width: 480px) {\n    grid-template-columns: repeat(1, 1fr);\n    justify-items: center;\n  }\n`;\n","import CardFilm from '../CardFilm/CardFilm';\nimport { List } from './FilmList.styled';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { ItemLink } from '../CardFilm/CardFilm.styled';\n\nconst FilmList = ({ data }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {data.map(el => (\n        <ItemLink\n          to={`/movies/${el.id}`}\n          state={{ from: location }}\n          key={el.id}\n        >\n          <CardFilm itemData={el} />\n        </ItemLink>\n      ))}\n    </List>\n  );\n};\n\nexport default FilmList;\n\nFilmList.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div``;\n\nexport const StyledInput = styled.input`\n  margin: 50px 0;\n  font-size: 16px;\n  font-weight: 400;\n  width: 532px;\n  height: 50px;\n  border-radius: 20px;\n  box-shadow: 8px 9px 20px 10px rgba(0, 0, 0, 0.6);\n  background-image: linear-gradient(\n    to right,\n    #de9099 0%,\n    #bff8ff 51%,\n    #db8690 100%\n  );\n  text-align: center;\n  display: flex;\n  margin-bottom: 20px;\n\n  ::placeholder {\n    letter-spacing: 1.2em;\n    font-size: 14px;\n    text-align: center;\n    color: #2f3232;\n\n    @media (max-width: 420px) {\n      letter-spacing: 0.7em;\n      font-size: 14px;\n    }\n  }\n  @media (max-width: 660px) {\n    width: 400px;\n    margin-left: auto;\n    margin-right: auto;\n    letter-spacing: 0.9em;\n    font-size: 12px;\n  }\n\n  @media (max-width: 420px) {\n    width: 300px;\n    margin-left: auto;\n    margin-right: auto;\n    letter-spacing: 0.9em;\n    font-size: 12px;\n  }\n`;\n\nexport const StyledSearch = styled.div`\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #100f0f;\n`;\n","import styled from 'styled-components';\n\nexport const BoxMessage = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  justify-content: center;\n  margin-top: 150px;\n`;\n\n// export const MessageTitle = styled.h2`\n//   color: 00563F;\n//   /* text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #fff, 0 0 10px #33ffff,\n//     0 0 12px #33ffff, 0 0 15px #33ffff, 0 0 15px #33ffff, 0 0 20px #33ffff; */\n//   font-size: ${p => p.theme.fontSizes.xxl};\n//   font-weight: ${p => p.theme.fontWeights.semiBold};\n//   text-transform: ${p => p.theme.textTransform.upCase};\n//   font-family: ${p => p.theme.fonts.monospace};\n//   font-family: Georgia, serif;\n//   text-decoration: none solid rgb(68, 68, 68);\n//   font-style: italic;\n//   font-variant: normal;\n//   margin-bottom: 3px;\n// `;\n\nexport const MessageText = styled.p`\n  color: 00563F;\n  font-size: ${p => p.theme.fontSizes.xxl};\n  font-weight: ${p => p.theme.fontWeights.semiBold};\n  text-transform: ${p => p.theme.textTransform.upCase};\n  font-family: ${p => p.theme.fonts.monospace};\n  font-family: Georgia, serif;\n  text-decoration: none solid rgb(68, 68, 68);\n  font-style: italic;\n  font-variant: normal;\n  color: transparent;\n  background: #666666;\n  -webkit-background-clip: text;\n  -moz-background-clip: text;\n  background-clip: text;\n  text-shadow: 0px 10px 10px rgba(255, 255, 255, 0.3);\n\n  @media (max-width: 770px) {\n    font-size: ${p => p.theme.fontSizes.l};\n  }\n\n  @media (max-width: 450px) {\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n  @media (max-width: 360px) {\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BoxMessage } from './Message.styled';\n// import { MessageTitle } from './Message.styled';\nimport { MessageText } from './Message.styled';\n\nconst Message = () => (\n  <BoxMessage>\n    {/* <MessageTitle>Enter the title of the desired movie</MessageTitle> */}\n    <MessageText>We wish you a pleasant viewing!</MessageText>\n  </BoxMessage>\n);\n\nMessage.defaultProps = {\n  children: [],\n};\n\nMessage.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Message;\n","import { Container } from './Form.styled';\nimport PropTypes from 'prop-types';\nimport Message from '../..//../components/Message/Message';\nimport { StyledSearch, StyledInput } from './Form.styled';\n// import { BsSearch } from 'react-icons/bs';\n\nconst Form = ({ handleSubmit, handleInputChange, query }) => {\n  return (\n    <Container>\n      <form onSubmit={handleSubmit}>\n        <StyledSearch>\n          {query ? (\n            <StyledInput\n              placeholder=\"Type to search\"\n              type=\"text\"\n              onChange={handleInputChange}\n            />\n          ) : (\n            <StyledInput\n              type=\"text\"\n              placeholder=\"Type to search\"\n              onChange={handleInputChange}\n            />\n          )}\n\n          {/* <ButtonSubmit type=\"submit\">\n            <BsSearch size=\"20px\" color=\"black\" />\n          </ButtonSubmit> */}\n        </StyledSearch>\n      </form>\n      <div> {query.length < 1 && <Message />}</div>\n    </Container>\n  );\n};\n\nexport default Form;\n\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleInputChange: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as FilmsAPI from '../../services/Api';\nimport FilmList from '../../components/FilmList/FilmList';\nimport Form from './Form/Form';\nimport styled from 'styled-components';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') ?? '');\n  const [films, setFilms] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n\n  useEffect(() => {\n    if (query) {\n      setSearchParams(`query=${query}`);\n      FilmsAPI.fetchSearchFilmByName(query)\n        .then(data => {\n          Loading.circle({\n            svgColor: '#ff6b01',\n          });\n          setFilms(data);\n          if (data.length === 0) {\n            Notify.info('Nothing found', {\n              autoClose: 2000,\n            });\n          }\n        })\n        .finally(() => {\n          Loading.remove();\n        });\n    }\n  }, [query, setSearchParams]);\n\n  const handleInputChange = e => {\n    setSearchValue(e.target.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    e.target.reset();\n\n    if (searchValue === '') {\n      Notify.failure(' Please enter the name!');\n\n      return;\n    }\n\n    setQuery(searchValue);\n  };\n\n  return (\n    <>\n      <ContainerForm>\n        <Form\n          handleSubmit={handleSubmit}\n          handleInputChange={handleInputChange}\n          query={query}\n        />\n      </ContainerForm>\n      <FilmList data={films} />\n    </>\n  );\n};\n\nconst ContainerForm = styled.div`\n  margin-top: 20px;\n`;\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '8b9b90eab4f34348a4bd4775afa7ecfd';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// Фетч трендов\nexport async function fetchPopularFilms() {\n  const response = await axios.get(\n    `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n\n//  Фетч по поиску по имени\n\nexport async function fetchSearchFilmByName(filmName) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${filmName}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\n// Фетч фильма по id\nexport async function fetchFilmInfo(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}?api_key=8b9b90eab4f34348a4bd4775afa7ecfd&language=en-US`\n  );\n  return response.data;\n}\n\n// Фетч отзывов на фильм\nexport async function fetchMovieReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieCast(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.cast;\n}\n"],"names":["genresInfo","id","name","GenerateGenres","genresId","Object","values","listGenres","forEach","el","includes","push","Genres","slice","join","styled","ItemLink","Link","Item","Title","MetaWrapper","Image","itemData","poster_path","title","genre_ids","src","alt","List","data","location","useLocation","map","to","state","from","Container","StyledInput","StyledSearch","BoxMessage","MessageText","p","theme","fontSizes","xxl","fontWeights","semiBold","textTransform","upCase","fonts","monospace","l","m","s","Message","defaultProps","children","handleSubmit","handleInputChange","query","onSubmit","placeholder","type","onChange","length","ContainerForm","useSearchParams","searchParams","setSearchParams","useState","get","setQuery","films","setFilms","searchValue","setSearchValue","useEffect","FilmsAPI","then","Loading","svgColor","Notify","autoClose","finally","e","preventDefault","target","reset","value","toLowerCase","trim","FilmList","API_KEY","fetchPopularFilms","axios","response","results","fetchSearchFilmByName","filmName","fetchFilmInfo","movie_id","fetchMovieReviews","fetchMovieCast","cast"],"sourceRoot":""}