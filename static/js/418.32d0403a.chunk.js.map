{"version":3,"file":"static/js/418.32d0403a.chunk.js","mappings":"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","sources":["pages/MovieDetailsPage/FilmDetailsCard/FilmDetailsCard.styled.js","pages/MovieDetailsPage/TableInformationFilm/TableInformationFilm.styled.js","pages/MovieDetailsPage/TableInformationFilm/TableInformationFilm.js","pages/MovieDetailsPage/FilmDetailsCard/FilmDetailsCard.js","pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.js","services/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ContainerFilmDetails = styled.div`\n  margin-top: 10px;\n  padding: 10px;\n  border-radius: 30px;\n  border: 0.5px solid #fff;\n  background-color: #006666;\n  color: #fff;\n  @media screen and (max-width: 480px) {\n    max-width: 310px;\n  }\n`;\n\nexport const FilmContainer = styled.div`\n  display: flex;\n  margin-top: 20px;\n  @media screen and (max-width: 480px) {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n`;\n\nexport const ImagePoster = styled.img`\n  border: 3px solid #fff;\n  width: 320px;\n  height: 460px;\n  @media screen and (max-width: 480px) {\n    width: 250px;\n    height: 350px;\n  }\n`;\n\nexport const ContainerMeta = styled.div`\n  margin-left: 20px;\n`;\n\nexport const Title = styled.h1``;\n\nexport const PreTitle = styled.p`\n  font-size: 16px;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  color: #ccffff;\n`;\n\nexport const AdditionalInfo = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Cast = styled(Link)`\n  padding: 10px 50px;\n  background-color: #fff;\n  border-radius: 20px;\n  margin-right: 30px;\n  text-decoration: none;\n  color: white;\n  background-color: #00151a;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  :focus {\n    box-shadow: 0 0 10px #33ffff, 0 0 10px #33ffff, 0 0 10px #33ffff,\n      0 0 15px #33ffff, 0 0 20px #33ffff;\n    opacity: 0.8;\n    transition: 0.5s;\n    transform: scale(1.02);\n  }\n\n  @media screen and (max-width: 480px) {\n    padding: 10px 30px;\n    margin-right: 10px;\n  }\n`;\n\nexport const Reviews = styled(Link)`\n  padding: 10px 50px;\n  background-color: #fff;\n  border-radius: 20px;\n  text-decoration: none;\n  color: white;\n  background-color: #00151a;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  :focus {\n    box-shadow: 0 0 10px #33ffff, 0 0 10px #33ffff, 0 0 10px #33ffff,\n      0 0 15px #33ffff, 0 0 20px #33ffff;\n    opacity: 0.8;\n    transition: 0.5s;\n    transform: scale(1.02);\n  }\n\n  @media screen and (max-width: 480px) {\n    padding: 10px 30px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Tr = styled.tr`\n  @media screen and (max-width: 1280px) {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n  }\n`;\n\nexport const Table = styled.table`\n  border-spacing: 0px;\n  border-collapse: collapse;\n`;\n\nexport const Td = styled.td`\n  vertical-align: sub;\n`;\n\nexport const TitleCategory = styled.h2`\n  width: 200px;\n  margin-top: 5px;\n  font-size: 20px;\n  color: #ff6b01;\n`;\n","import { Table, Tr, Td, TitleCategory } from './TableInformationFilm.styled';\nimport PropTypes from 'prop-types';\n\nconst TableInformationFilm = ({ data }) => {\n  const {\n    vote_average,\n    release_date,\n    production_countries,\n    runtime,\n    overview,\n    genres,\n  } = data;\n\n  return (\n    <Table>\n      <tbody>\n        <Tr>\n          <Td>\n            <TitleCategory>Ratings:</TitleCategory>\n          </Td>\n          <Td>\n            <span>{vote_average}</span>\n          </Td>\n        </Tr>\n        <Tr>\n          <Td>\n            <TitleCategory>Release date:</TitleCategory>\n          </Td>\n          <Td>\n            <span>{release_date}</span>\n          </Td>\n        </Tr>\n        <Tr>\n          <Td>\n            <TitleCategory>Country:</TitleCategory>\n          </Td>\n          <Td>\n            <span>{production_countries.map(el => el.name)}</span>\n          </Td>\n        </Tr>\n        <Tr>\n          <Td>\n            <TitleCategory>Genres:</TitleCategory>\n          </Td>\n          <Td>\n            <span>{genres.map(el => el.name).join(' ')}</span>\n          </Td>\n        </Tr>\n        <Tr>\n          <Td>\n            <TitleCategory>Time:</TitleCategory>\n          </Td>\n          <Td>\n            <span>{runtime} min.</span>\n          </Td>\n        </Tr>\n        <Tr>\n          <Td>\n            <TitleCategory>Overview:</TitleCategory>\n          </Td>\n          <Td>\n            <span>{overview} min.</span>\n          </Td>\n        </Tr>\n      </tbody>\n    </Table>\n  );\n};\n\nexport default TableInformationFilm;\n\nTableInformationFilm.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n","// import { Route, Routes } from 'react-router-dom';\nimport {\n  ContainerFilmDetails,\n  FilmContainer,\n  Reviews,\n  Cast,\n  AdditionalInfo,\n  Title,\n  PreTitle,\n  ContainerMeta,\n  ImagePoster,\n} from './FilmDetailsCard.styled';\nimport TableInformationFilm from '../TableInformationFilm/TableInformationFilm';\nimport PropTypes from 'prop-types';\n\nconst FilmDetailsCard = ({ data }) => {\n  const { title, tagline, poster_path } = data;\n  return (\n    <ContainerFilmDetails>\n      <FilmContainer>\n        <ImagePoster\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt=\"poster\"\n        />\n\n        <ContainerMeta>\n          <Title>{title}</Title>\n          <PreTitle>{tagline}</PreTitle>\n          <TableInformationFilm data={data} />\n        </ContainerMeta>\n      </FilmContainer>\n      <AdditionalInfo>\n        <Cast to={'cast'}>Cast</Cast>\n        <Reviews to={'reviews'}>Reviews</Reviews>\n      </AdditionalInfo>\n    </ContainerFilmDetails>\n  );\n};\n\nexport default FilmDetailsCard;\n\nFilmDetailsCard.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonGoBackContainer = styled.div`\n  margin-top: 10px;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ButtonGoBack = styled(Link)`\n  padding: 5px 10px;\n  border: none;\n  text-decoration: none;\n  color: #fff;\n  background-color: #00151a;\n  border-radius: 20px;\n  cursor: pointer;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover,\n  :focus {\n    box-shadow: 0 0 10px #33ffff, 0 0 10px #33ffff, 0 0 10px #33ffff,\n      0 0 15px #33ffff, 0 0 20px #33ffff;\n\n    opacity: 0.8;\n\n    transition: 0.5s;\n    transform: scale(1.02);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams, Outlet } from 'react-router-dom';\nimport * as FilmsAPI from '../../services/Api';\nimport FilmDetailsCard from './FilmDetailsCard/FilmDetailsCard';\nimport { ButtonGoBackContainer, ButtonGoBack } from './MovieDetailsPage.styled';\nimport { useLocation } from 'react-router-dom';\nimport { Loading } from 'notiflix/build/notiflix-loading-aio';\n\nconst MovieDetailsPage = () => {\n  const { id } = useParams();\n  const [film, setFilm] = useState();\n  const location = useLocation();\n  const [prevLocation] = useState(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    FilmsAPI.fetchFilmInfo(id)\n      .then(data => {\n        Loading.circle({\n          svgColor: '#ff6b01',\n          cssAnimationDuration: 800,\n        });\n        setFilm(data);\n      })\n      .finally(() => {\n        Loading.remove();\n      });\n  }, [id]);\n\n  return (\n    <>\n      <ButtonGoBackContainer>\n        <ButtonGoBack to={prevLocation}>Go back</ButtonGoBack>\n      </ButtonGoBackContainer>\n      {film && <FilmDetailsCard data={film} />}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst API_KEY = '8b9b90eab4f34348a4bd4775afa7ecfd';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n// Фетч трендов\nexport async function fetchPopularFilms() {\n  const response = await axios.get(\n    `/movie/popular?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n}\n\n//  Фетч по поиску по имени\n\nexport async function fetchSearchFilmByName(filmName) {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&query=${filmName}&page=1&include_adult=false`\n  );\n  return response.data.results;\n}\n\n// Фетч фильма по id\nexport async function fetchFilmInfo(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}?api_key=8b9b90eab4f34348a4bd4775afa7ecfd&language=en-US`\n  );\n  return response.data;\n}\n\n// Фетч отзывов на фильм\nexport async function fetchMovieReviews(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.results;\n}\n\nexport async function fetchMovieCast(movie_id) {\n  const response = await axios.get(\n    `/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data.cast;\n}\n"],"names":["ContainerFilmDetails","styled","FilmContainer","ImagePoster","ContainerMeta","Title","PreTitle","AdditionalInfo","Cast","Link","Reviews","Tr","Table","Td","TitleCategory","data","vote_average","release_date","production_countries","runtime","overview","genres","map","el","name","join","title","tagline","poster_path","src","alt","to","ButtonGoBackContainer","ButtonGoBack","id","useParams","useState","film","setFilm","location","useLocation","state","from","prevLocation","useEffect","FilmsAPI","then","Loading","svgColor","cssAnimationDuration","finally","API_KEY","fetchPopularFilms","axios","response","results","fetchFilmInfo","movie_id"],"sourceRoot":""}