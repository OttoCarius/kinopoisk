{"version":3,"file":"static/js/186.6f63400d.chunk.js","mappings":"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","sources":["components/MoviePreview/MoviePreview.styled.js","components/MoviePreview/MoviePreview.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/Message/Message.jsx","components/Loader/Loader.js","services/PixabayApi.js","pages/HomePage/HomePage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledCard = styled.div`\n  position: relative;\n  border-radius: 5px;\n  padding-top: 30px;\n  padding-bottom: 30px;\n`;\n\nexport const StyledThumb = styled.div`\n  height: 100%;\n\n  @media screen and (min-width: 370px) and (max-width: 767px) {\n    height: 100%;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1169px) {\n    height: 100%;\n  }\n\n  @media screen and (min-width: 1170px) {\n    height: 100%;\n  }\n`;\n\nexport const StyledPoster = styled.img`\n  width: 100%;\n  height: 100%;\n\n  object-fit: cover;\n  object-position: 0%;\n`;\n\nexport const Styledtext = styled.p`\n  display: flex;\n  justify-content: center;\n  padding: 10px;\n\n  font-size: 18px;\n`;\n\nexport const StyledFilmName = styled.span`\n  font-family: Georgia, serif;\n  font-size: 22px;\n  letter-spacing: 0.8px;\n  word-spacing: 3.2px;\n  color: #000000;\n  font-weight: 700;\n  text-decoration: none solid rgb(68, 68, 68);\n  font-style: italic;\n  font-variant: normal;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus {\n    color: #003333;\n\n    opacity: 0.8;\n\n    transition: all $transition-duration $transition-timing;\n  }\n`;\n\n// export const StyledVote = styled.vote`\n//   position: absolute;\n//   top: 15px;\n//   right: 15px;\n//   padding: 5px;\n//   border-radius: 5px;\n\n//   color: #ffffff;\n//   background-color: $secondary-color;\n\n//   &--top {\n//     @extend .vote;\n//     background-color: $base-color;\n//   }\n\n//   &--low {\n//     @extend .vote;\n//     background-color: tomato;\n//   }\n// `;\n\n// .vote {\n//   position: absolute;\n//   top: 15px;\n//   right: 15px;\n//   padding: 5px;\n//   border-radius: 5px;\n\n//   color: #ffffff;\n//   background-color: $secondary-color;\n\n//   &--top {\n//     @extend .vote;\n//     background-color: $base-color;\n//   }\n\n//   &--low {\n//     @extend .vote;\n//     background-color: tomato;\n//   }\n// }\n","import PropTypes from 'prop-types';\nimport {\n  StyledCard,\n  StyledThumb,\n  StyledPoster,\n  Styledtext,\n  StyledFilmName,\n} from './MoviePreview.styled';\n\nimport placeholder from '../../components/images/placeholder.png';\n\n// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–µ–≤—å—é —Ñ–∏–ª—å–º–∞ –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ —Ñ–∏–ª—å–º–æ–≤\nconst MoviePreview = ({ title, poster }) => {\n  const posterUrl = poster\n    ? `https://image.tmdb.org/t/p/w500${poster}`\n    : placeholder;\n  //   const voteStyle = vote > 5 ? ['vote--top'] : ['vote--low'];\n\n  return (\n    <StyledCard>\n      <StyledThumb>\n        <StyledPoster src={posterUrl} alt={title} title={title} />\n      </StyledThumb>\n\n      <Styledtext>\n        <StyledFilmName>{title}</StyledFilmName>\n        {/* {vote ? <StyledVote>{vote}</StyledVote> : null} */}\n      </Styledtext>\n    </StyledCard>\n  );\n};\n\nMoviePreview.defaultProps = {\n  poster: '',\n  vote: null,\n};\n\nMoviePreview.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string,\n  vote: PropTypes.number,\n};\n\nexport default MoviePreview;\n","import styled from 'styled-components';\n\nexport const StyledImageGallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n  grid-gap: 40px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledImageItem = styled.li`\n  flex-basis: calc(100% / 2 - 20px);\n  margin-left: 20px;\n  margin-top: 20px;\n\n  opacity: 1;\n\n  transition: 0.5s;\n\n  &:hover,\n  &:focus {\n    color: #33ffff;\n    box-shadow: 0 0 15px #33ffff, 0 0 15px #33ffff, 0 0 15px #33ffff,\n      0 0 25px #33ffff, 0 0 35px #33ffff;\n\n    opacity: 0.8;\n\n    transition: 0.3s;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1169px) {\n    flex-basis: calc(100% / 3 - 20px);\n  }\n\n  @media screen and (min-width: 1170px) {\n    flex-basis: calc(100% / 4 - 20px);\n  }\n\n  .link {\n    color: inherit;\n\n    text-decoration: none;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport MoviePreview from '../MoviePreview/MoviePreview';\n\nimport { StyledImageGallery, StyledImageItem } from './MoviesList.styled';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <StyledImageGallery>\n      {movies.map(({ id, title, poster_path, vote_average }) => (\n        <StyledImageItem key={id}>\n          <Link\n            to={{\n              pathname: `${movies}/${id}`,\n              state: { from: location },\n            }}\n          >\n            <MoviePreview\n              title={title}\n              poster={poster_path}\n              vote={vote_average}\n            />\n          </Link>\n        </StyledImageItem>\n      ))}\n    </StyledImageGallery>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;\n","import PropTypes from 'prop-types';\n\nconst Message = ({ children }) => <div>{children}</div>;\n\nMessage.defaultProps = {\n  children: [],\n};\n\nMessage.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Message;\n\n// import PropTypes from 'prop-types';\n// import { BoxMessage } from './Message.styled';\n// import { MessageTitle } from './Message.styled';\n// import { MessageText } from './Message.styled';\n\n// const Message = () => (\n//   <BoxMessage>\n//     <MessageTitle>The gallery is empty üôÅ</MessageTitle>\n//     <MessageText>Use search field!</MessageText>\n//   </BoxMessage>\n// );\n\n// Message.defaultProps = {\n//   children: [],\n// };\n\n// Message.propTypes = {\n//   children: PropTypes.node,\n// };\n\n// export default Message;\n","import { Circles } from 'react-loader-spinner';\n// import { StyledLoader } from './Message.styled';\n\nexport default function Loader() {\n  return (\n    <Circles\n      height=\"150\"\n      width=\"150\"\n      color=\" orange\"\n      ariaLabel=\"circles-loading\"\n      wrapperStyle={{\n        position: 'fixed',\n        bottom: '50%',\n        left: '50%',\n        transform: 'translate(-50%,-50%)',\n        zIndex: '100',\n      }}\n      visible={true}\n    />\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '8b9b90eab4f34348a4bd4775afa7ecfd';\naxios.defaults.params = { api_key: apiKey, language: 'en-US' };\n\n// –§–µ—Ç—á  –¥–ª—è  —Ç—Ä–µ–Ω–¥–æ–≤\nconst fetchTrends = async () => {\n  try {\n    const { data } = await axios.get(`trending/movie/day?api_key=${apiKey}`);\n    const trends = data.results;\n\n    return trends;\n  } catch (error) {\n    console.error('Smth wrong with fetch trends in api', error);\n  }\n};\n\n//  –§–µ—Ç—á –ø–æ –ø–æ–∏—Å–∫—É\n\nconst fetchMoviesBySearch = async (searchQuery, currentPage) => {\n  try {\n    const { data } = await axios.get(\n      `search/movie?api_key=${apiKey}&query=${searchQuery}&page=${currentPage}&language={en-US}`\n    );\n    const results = data.results;\n    return results;\n  } catch (error) {\n    console.error('Smth wrong with fetch movie search in api', error);\n  }\n};\n\n// –§–µ—Ç—á —Ñ–∏–ª—å–º–∞ –ø–æ id\n\nconst fetchMovieById = async id => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${id}?api_key=${apiKey}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.error('Smth wrong with fetch movie id in api', error);\n  }\n};\n\n// –§–µ—Ç—á –∞–∫—Ç—ë—Ä–æ–≤ –¥–ª—è —Ñ–∏–ª—å–º–∞\n\nconst fetchCast = async id => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${id}/credits?api_key=${apiKey}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.error('Smth wrong with fetch cast in api', error);\n  }\n};\n\n// –§–µ—Ç—á –æ—Ç–∑—ã–≤–æ–≤ –Ω–∞ —Ñ–∏–ª—å–º\n\nconst fetchReviews = async id => {\n  try {\n    const { data } = await axios.get(\n      `/movie/${id}/reviews?api_key=${apiKey}&language=en-US&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.error('Smth wrong with fetch reviews in api', error);\n  }\n};\n\n// eslint-disable-next-line\nexport default {\n  fetchTrends,\n  fetchMoviesBySearch,\n  fetchMovieById,\n  fetchCast,\n  fetchReviews,\n};\n","import { useState, useEffect } from 'react';\nimport MovieList from '../../components/MoviesList/MoviesList';\nimport Message from '../../components/Message/Message';\nimport Loader from '../../components/Loader/Loader';\nimport PixabayApi from '../../services/PixabayApi';\n\nconst HomePage = () => {\n  const [trends, setTrends] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  // eslint-disable-next-line\n  const [error, setError] = useState('');\n\n  // –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –º–∞—É–Ω—Ç–µ\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // –ó–∞–ø—Ä–æ—Å –∑–∞ —Ç—Ä–µ–Ω–¥–∞–º–∏ –ø—Ä–∏ –º–∞—É–Ω—Ç–µ\n  const fetchData = async () => {\n    setLoading(true);\n\n    try {\n      const movies = await PixabayApi.fetchTrends();\n\n      setTrends(movies);\n    } catch (error) {\n      console.error('Smth wrong with homepage trends fetch', error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <main>\n      {trends ? (\n        <MovieList movies={trends} />\n      ) : (\n        <Message>\n          <h2>\n            The service is temporarily unavailable. Please try again later.\n          </h2>\n        </Message>\n      )}\n\n      {isLoading && <Loader />}\n    </main>\n  );\n};\n\nexport default HomePage;\n"],"names":["StyledCard","styled","StyledThumb","StyledPoster","Styledtext","StyledFilmName","MoviePreview","title","poster","posterUrl","placeholder","src","alt","defaultProps","vote","StyledImageGallery","StyledImageItem","movies","location","map","id","poster_path","vote_average","to","pathname","state","from","Message","children","Loader","height","width","color","ariaLabel","wrapperStyle","position","bottom","left","transform","zIndex","visible","axios","apiKey","api_key","language","fetchTrends","data","trends","results","console","error","fetchMoviesBySearch","searchQuery","currentPage","fetchMovieById","fetchCast","fetchReviews","useState","setTrends","isLoading","setLoading","setError","useEffect","fetchData","PixabayApi","message"],"sourceRoot":""}